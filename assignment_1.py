# -*- coding: utf-8 -*-
"""Assignment 1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_QYQVdcPq6hYSJOPLgpxV37TjHUF0dpA

# **Question no. 11**
"""

import numpy as np
import pandas as pd
from scipy import stats
from scipy.stats import norm

#avg. weight of adult in mexico with 94% CI
stats.norm.interval(0.94,200,30/(2000**0.5))

#with 98% CI
stats.norm.interval(0.98,200,30/(2000**0.5))

#witn 96% CI
stats.norm.interval(0.96,200,30/(2000**0.5))









"""# ***QUESTION NO. 12***"""

import numpy as np
import pandas as pd
from matplotlib import pyplot as plt
import statistics

marks=[34,36,36,38,38,39,40,40,41,41,41,41,42,42,42,45,49,56]

statistics.mean(marks)

statistics.mode(marks)

statistics.stdev(marks)

statistics.variance(marks)

plt.hist(marks , color='blue')
plt.grid()
plt.show()

plt.boxplot(marks)
plt.grid()
plt.show()

# From above plot we can say that mean of marks of student is 41 which is slightly greater than median.
# Most of the students got marks in between 41-42, there are only outliers i.e. 49,56









"""# ***QUESTION NO. 20***"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from scipy import stats
from scipy.stats import norm

cars = pd.read_csv('/content/cars.csv')
cars

sns.boxplot(cars.MPG)

# P(MPG>38)
1-stats.norm.cdf(38,cars.MPG.mean(),cars.MPG.std())

# P(MPG>40)
1-stats.norm.cdf(40,cars.MPG.mean(),cars.MPG.std())

# P(20<MPG<50)
stats.norm.cdf(0.50,cars.MPG.mean(),cars.MPG.std())-stats.norm.cdf(0.20,cars.MPG.mean(),cars.MPG.std())





"""# ***QUESTION NO. 21***"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline

wcat= pd.read_csv('/content/wc_at.csv')
wcat

import warnings
warnings.filterwarnings('ignore')

# plotting distribution for Waist Circumference
sns.distplot(wcat.Waist)
plt.ylabel('density')

# plotting distribution for Adipose Tissue
sns.distplot(wcat.AT)
plt.ylabel('density')

#WC
wcat.Waist.mean(),wcat.Waist.median()

#AT
wcat.AT.mean(), wcat.AT.median()





"""# ***QUESTION NO. 23***"""

# t-score for 95% confidence interval FOR SAMPLE SIZE 25
from scipy import stats
stats.t.ppf(0.95,24)

# t-score for 96% confidence interval FOR SAMPLE SIZE 25
from scipy import stats
stats.t.ppf(0.96,24)

# t-score for 99% confidence interval FOR SAMPLE SIZE 25
from scipy import stats
stats.t.ppf(0.99,24)





"""# ***QUESTION NO. 24***"""

from scipy import stats
from scipy.stats import norm

# assume null hypothesis is : H0= Avg life of bulb >= 260 days
# alternate hypothesis is : H1 = avg life of bulb < 260 days

# find t score at x= 260 ; t=(s_mean-p_mean)/(s_SD/sqrt(n))
t=(260-270)/(90/18**0.5)
t

# find P(X>=260) for null hypothesis

# p_value=1-stats.t.cdf(abs(t_scores),df=n-1)    using cdf function
p_value=1-stats.t.cdf(abs(-0.4714),df=17)
p_value

# OR p_value=stats.t.sf(abs(t_score),df=n-1)     using sf function
p_value=stats.t.sf(abs(-0.4714),df=17)
p_value



THANK YOU!